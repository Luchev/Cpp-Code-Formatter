language_name = C++

file_extensions = c, C, cpp, c++, cc, cxx, cp, h, H, hpp, h++, hh, hxx. hp

keywords = alignas,alignof,and,and_eq,asm,atomic_cancel,atomic_commit,atomic_noexcept,auto,bitand,bitor,bool,break,case,catch,char,char16_t,char32_t,class,compl,concept,const,constexpr,const_cast,continue,co_await,co_return,co_yield,decltype,default,delete,do,double,dynamic_cast,else,enum,explicit,export,extern,false,float,for,friend,goto,if,import,inline,int,long,module,mutable,namespace,new,noexcept,not,not_eq,nullptr,operator,or,or_eq,private,protected,public,register,reinterpret_cast,requires,return,short,signed,sizeof,static,static_assert,static_cast,struct,switch,synchronized,template,this,thread_local,throw,true,try,typedef,typeid,typename,union,unsigned,using,virtual,void,volatile,wchar_t,while,xor,xor_eq,override,final,transaction_safe,transaction_safe_dynamic,

keywords_with_indent = if,for,while,switch, catch, else if, else, try

keywords_with_brackets = if, for, while, switch, else if, catch

operators = +,-,*,/,%,^,|,||,&,&&,~,<<,>>,<,>,=,==,!=,>=,<=,!,+=,-=,,*=,/=,%=,&=,|=,^=,<<=,>>=,++,--,.,::,?,:,;

brackets = (,),{,},[,]

raw_css = "@font-face { font-family: Fira Code; src: url('https://github.com/tonsky/FiraCode/blob/master/distr/otf/FiraCode-Regular.otf?raw=true'); }"

body_formattting = "background-color: #1e1e1e; color: c8c8c8; font-family: Fira Code;"

comment_formatting = "color: #57a64a; font-style: italic;"

keyword_formatting = "color: #3073d6; font-weight: bold;"

string_formatting = "color: #d69d85;"

preprocessor_formatting = "color: #7f7f7f;"

number_formatting = "color: #bd63c5;"

char_formatting = "color: #b5b366;"

operator_formatting = "color: #ffdc00;"

bracket_formatting = "color: #ae2344;"

; End of settings

